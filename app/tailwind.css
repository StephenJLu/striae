@tailwind base;
@tailwind components;
@tailwind utilities;

/* Media Query Definitions */
@custom-media --mediaDesktop (max-width: 2560px);  /* 4K/2K displays */
@custom-media --mediaLaptop (max-width: 1920px);   /* Standard desktop */
@custom-media --mediaTablet (max-width: 1024px);   /* iPad Pro/tablets */
@custom-media --mediaMobile (max-width: 768px);    /* Mobile landscape */
@custom-media --mediaMobileLS (max-height: 768px); /* Mobile landscape height */
@custom-media --mediaMobileS (max-width: 480px);   /* Mobile portrait */
@custom-media --mediaUseMotion (prefers-reduced-motion: no-preference);
@custom-media --mediaReduceMotion (prefers-reduced-motion: reduce);
@custom-media --mediaTouch (pointer: coarse);
@custom-media --mediaNoTouch (pointer: fine);

@layer base {
  :root {
    color-scheme: light;
    --mobileNavOffset: calc(var(--spaceOuter) * 2 + var(--space2XL));
  }

  html,
  body {
    height: 100vh;
    width: 100vw;
    min-height: screen;
    overflow-x: hidden;
    font-family: var(--fontStack);
    font-weight: var(--fontWeightRegular);
    color: var(--textBody);
    background: linear-gradient(rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.95)),
                url('/assets/striae.jpg') center/cover no-repeat fixed;
    background-blend-mode: normal;
    transition: background var(--durationM) ease,
                opacity var(--durationM) ease;
    opacity: 1;
  }

  a {
    color: var(--accent);
    text-decoration: dotted;
    transition: color var(--durationS) ease;

    &:hover,
    &:focus,
    &:active {
      text-decoration: dotted;
    }
  }

  code,
  pre {
    font-family: var(--monoFontStack);
  }

  ::selection {
    background: var(--accent);
    color: var(--black);
  }

  :focus {
    outline: 4px solid var(--text);
    outline-offset: 4px;

    &:not(:focus-visible) {
      outline: none;
    }
  }
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes reveal {
  0% {
    transform: scale3d(0, 1, 1);
    transform-origin: left;
  }
  50% {
    transform: scale3d(1, 1, 1);
    transform-origin: left;
  }
  51% {
    transform: scale3d(1, 1, 1);
    transform-origin: right;
  }
  100% {
    transform: scale3d(0, 1, 1);
    transform-origin: right;
  }
}